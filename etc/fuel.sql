INSERT INTO public.releases ("name","version",description,operating_system,state,networks_metadata,attributes_metadata,volumes_metadata,modes_metadata,roles_metadata,modes,network_roles_metadata,extensions,components_metadata,node_attributes,nic_attributes,bond_attributes,tags_metadata,required_component_types) VALUES
('Kubernetes on CentOS 7','kube-11.0','This option will install the OpenStack Mitaka packages using a CentOS based operating system. With high availability features built in, you are getting a robust, enterprise-grade OpenStack deployment.','CentOS','available','{"bonding": {"availability": [{"dpdkovs": "''experimental'' in version:feature_groups and interface:pxe == false and nic_attributes:dpdk.enabled.value and not nic_attributes:sriov.enabled.value"}, {"linux": "not nic_attributes:sriov.enabled.value"}], "properties": {"dpdkovs": {"lacp": [{"for_modes": ["balance-tcp"], "values": ["active", "passive"]}], "lacp_rate": [{"for_modes": ["balance-tcp"], "values": ["slow", "fast"]}], "mode": [{"values": ["active-backup", "balance-slb", "balance-tcp"]}], "xmit_hash_policy": [{"for_modes": ["balance-tcp"], "values": ["layer2", "layer2+3", "layer3+4", "encap2+3", "encap3+4"]}]}, "linux": {"lacp_rate": [{"for_modes": ["802.3ad"], "values": ["slow", "fast"]}], "mode": [{"values": ["balance-rr", "active-backup"]}, {"values": ["802.3ad"], "condition": "''experimental'' in version:feature_groups or interface:pxe == false"}, {"values": ["balance-xor", "broadcast", "balance-tlb", "balance-alb"], "condition": "''experimental'' in version:feature_groups"}], "xmit_hash_policy": [{"for_modes": ["802.3ad", "balance-xor", "balance-tlb", "balance-alb"], "values": ["layer2", "layer2+3", "layer3+4", "encap2+3", "encap3+4"]}]}}}, "nova_network": {"config": {"floating_ranges": [["172.16.0.128", "172.16.0.254"]], "net_manager": "FlatDHCPManager", "fixed_networks_vlan_start": 103, "fixed_networks_amount": 1, "fixed_network_size": 256, "fixed_networks_cidr": "10.0.0.0/16"}, "networks": [{"vips": ["haproxy", "vrouter"], "name": "public", "notation": "ip_ranges", "render_type": null, "map_priority": 1, "configurable": true, "use_gateway": true, "vlan_start": null, "render_addr_mask": "public", "cidr": "172.16.0.0/24", "gateway": "172.16.0.1", "ip_range": ["172.16.0.2", "172.16.0.127"]}, {"vips": ["haproxy", "vrouter"], "name": "management", "notation": "cidr", "render_type": "cidr", "map_priority": 2, "configurable": true, "use_gateway": false, "vlan_start": 101, "render_addr_mask": "internal", "cidr": "192.168.0.0/24"}, {"name": "storage", "notation": "cidr", "render_type": "cidr", "map_priority": 2, "configurable": true, "use_gateway": false, "vlan_start": 102, "render_addr_mask": "storage", "cidr": "192.168.1.0/24"}, {"ext_net_data": ["fixed_networks_vlan_start", "fixed_networks_amount"], "name": "fixed", "notation": null, "render_type": null, "map_priority": 2, "configurable": false, "use_gateway": false, "vlan_start": null, "render_addr_mask": null}]}, "neutron": {"config": {"parameters": {"database": {"username": null, "passwd": "", "provider": "mysql", "port": "3306", "database": null}, "keystone": {"admin_user": null, "admin_password": ""}, "amqp": {"username": null, "passwd": "", "hosts": "hostname1:5672, hostname2:5672", "provider": "rabbitmq"}, "metadata": {"metadata_proxy_shared_secret": ""}}, "baremetal_gateway": "192.168.3.51", "internal_cidr": "192.168.111.0/24", "floating_ranges": [["172.16.0.130", "172.16.0.254"]], "floating_name": "admin_floating_net", "base_mac": "fa:16:3e:00:00:00", "internal_gateway": "192.168.111.1", "internal_name": "admin_internal_net", "baremetal_range": ["192.168.3.52", "192.168.3.254"], "gre_id_range": [2, 65535], "vlan_range": [1000, 1030]}, "networks": [{"vips": ["haproxy", "vrouter"], "name": "public", "notation": "ip_ranges", "render_type": null, "map_priority": 1, "configurable": true, "floating_range_var": "floating_ranges", "use_gateway": true, "vlan_start": null, "render_addr_mask": "public", "cidr": "172.16.0.0/24", "ip_range": ["172.16.0.2", "172.16.0.126"]}, {"vips": ["haproxy", "vrouter"], "name": "management", "notation": "cidr", "render_type": "cidr", "map_priority": 2, "configurable": true, "use_gateway": false, "vlan_start": 101, "render_addr_mask": "internal", "cidr": "192.168.0.0/24"}, {"name": "storage", "notation": "cidr", "render_type": "cidr", "map_priority": 2, "configurable": true, "use_gateway": false, "vlan_start": 102, "render_addr_mask": "storage", "cidr": "192.168.1.0/24"}, {"name": "private", "notation": null, "render_type": null, "map_priority": 2, "neutron_vlan_range": true, "use_gateway": false, "vlan_start": null, "render_addr_mask": null, "configurable": false, "seg_type": "vlan"}, {"name": "private", "notation": "cidr", "render_type": "cidr", "map_priority": 2, "configurable": true, "use_gateway": false, "vlan_start": 103, "render_addr_mask": null, "cidr": "192.168.2.0/24", "seg_type": "gre"}, {"name": "private", "notation": "cidr", "render_type": "cidr", "map_priority": 2, "configurable": true, "use_gateway": false, "vlan_start": 103, "render_addr_mask": null, "cidr": "192.168.2.0/24", "seg_type": "tun"}, {"restrictions": [{"condition": "settings:additional_components.ironic.value == false"}], "name": "baremetal", "notation": "ip_ranges", "render_type": null, "map_priority": 2, "configurable": true, "use_gateway": false, "vlan_start": 104, "cidr": "192.168.3.0/24", "ip_range": ["192.168.3.2", "192.168.3.50"]}]}}','{"generated": {"provision": {"image_data": {"/boot": {"container": "gzip", "uri": "http://{settings.MASTER_IP}:8080/targetimages/centos_7_x86_64-boot.img.gz", "format": "ext2"}, "/": {"container": "gzip", "uri": "http://{settings.MASTER_IP}:8080/targetimages/centos_7_x86_64.img.gz", "format": "ext4"}}}, "base_syslog": {"syslog_port": {"generator": "identical", "generator_arg": "514"}, "syslog_server": {"generator": "ip", "generator_arg": "admin"}}, "puppet": {"modules": "rsync://{settings.MASTER_IP}:/puppet/{cluster.release.version}/modules/", "manifests": "rsync://{settings.MASTER_IP}:/puppet/{cluster.release.version}/manifests/"}, "cobbler": {"profile": {"generator": "identical", "generator_arg": "centos-x86_64"}}, "deployed_before": {"value": false}}, "editable": {"service_user": {"name": {"type": "hidden", "value": "fuel"}, "sudo": {"type": "hidden", "value": "ALL=(ALL) NOPASSWD: ALL"}, "homedir": {"type": "hidden", "value": "/var/lib/fuel"}, "root_password": {"type": "hidden", "value": "r00tme"}, "password": {"type": "hidden", "value": {"generator": "password"}}, "metadata": {"restrictions": [{"action": "hide", "condition": "true"}], "group": "general", "weight": 10, "label": "Service user account"}}, "operator_user": {"name": {"regex": {"source": "\\\\S", "error": "Empty username"}, "description": "Username for operator user", "weight": 50, "value": "fueladmin", "label": "Username", "type": "text"}, "sudo": {"weight": 90, "type": "textarea", "description": "Sudoers configuration directives for operator user, one per line.", "value": "ALL=(ALL) NOPASSWD: ALL", "label": "Sudoers configuration"}, "homedir": {"regex": {"source": "^/\\\\S", "error": "Invalid path"}, "description": "Home directory for operator user", "weight": 70, "value": "/home/fueladmin", "label": "Home directory", "type": "text"}, "password": {"regex": {"source": "\\\\S", "error": "Empty password"}, "description": "Password for operator user", "weight": 60, "value": {"generator": "password"}, "label": "Password", "type": "password"}, "authkeys": {"weight": 80, "type": "textarea", "description": "Public SSH keys to include to operator user\''s authorized keys, one per line.", "value": "", "label": "Authorized SSH keys"}, "metadata": {"group": "general", "weight": 15, "label": "Operating System Access"}}, "cgroups": {"metadata": {"restrictions": [{"action": "hide", "condition": "true"}], "group": "general", "always_editable": true, "weight": 90, "label": "Cgroups conguration for services"}}, "external_dns": {"dns_list": {"regex": {"source": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$", "error": "Invalid IP address"}, "description": "List of upstream DNS servers", "weight": 10, "max": 3, "value": {"generator": "from_settings", "generator_arg": "DNS_UPSTREAM"}, "label": "DNS list", "type": "text_list"}, "metadata": {"group": "network", "weight": 30, "label": "Host OS DNS Servers"}}, "repo_setup": {"repos": {"type": "custom_repo_configuration", "description": "To create a local repository mirror on the Fuel master node, please follow the instructions provided by running \\"fuel-package-updates --help\\" on the Fuel master node.\\nPlease make sure your Fuel master node has Internet access to the repository before attempting to create a mirror.\\n", "value": [{"priority": null, "type": "rpm", "name": "mos", "uri": "http://{settings.MASTER_IP}:8080/{cluster.release.version}/centos/x86_64"}, {"priority": null, "type": "rpm", "name": "mos-updates", "uri": "http://mirror.fuel-infra.org/mos-repos/centos/mos{cluster.release.environment_version}-centos7/updates/x86_64"}, {"priority": null, "type": "rpm", "name": "mos-security", "uri": "http://mirror.fuel-infra.org/mos-repos/centos/mos{cluster.release.environment_version}-centos7/security/x86_64"}, {"priority": 15, "type": "rpm", "name": "Auxiliary", "uri": "http://{settings.MASTER_IP}:8080/{cluster.release.version}/centos/auxiliary"}], "extra_priority": null}, "metadata": {"group": "general", "always_editable": true, "weight": 50, "label": "Repositories"}}, "public_network_assignment": {"assign_to_all_nodes": {"value": false, "type": "checkbox", "description": "When disabled, public network will be assigned to controllers only", "weight": 10, "label": "Assign public network to all nodes"}, "metadata": {"restrictions": [{"action": "hide", "condition": "cluster:net_provider != \''neutron\''"}], "group": "network", "weight": 10, "label": "Public network assignment"}}, "atop": {"service_enabled": {"value": true, "type": "checkbox", "description": "NOTE: When enabled, the service may generate logs up to a gigabyte in size per day.\\nThis should be taken into consideration when determining the correct size for the log partition.\\n", "weight": 10, "label": "Enable atop service"}, "interval": {"regex": {"source": "^[1-9]\\\\d*$", "error": "Should be a number of seconds"}, "restrictions": [{"action": "hide", "condition": "settings:atop.service_enabled.value == false"}], "description": "Interval between the snapshots in seconds", "weight": 20, "value": "20", "label": "Interval between the snapshots", "type": "text"}, "rotate": {"regex": {"source": "^[1-9]\\\\d*$", "error": "Should be a number of days"}, "restrictions": [{"action": "hide", "condition": "settings:atop.service_enabled.value == false"}], "description": "Number of days to keep log files", "weight": 30, "value": "7", "label": "Rotate days", "type": "text"}, "metadata": {"group": "logging", "enabled": true, "weight": 60, "toggleable": false, "label": "Advanced System & Process Monitor (atop)"}}, "storage": {"volumes_ceph": {"restrictions": ["settings:storage.volumes_lvm.value == true or settings:storage.volumes_block_device.value == true"], "description": "Configures Cinder to store volumes in Ceph RBD images.", "weight": 20, "value": false, "label": "Ceph RBD for volumes (Cinder)", "type": "checkbox"}, "objects_ceph": {"value": false, "type": "checkbox", "description": "Configures RadosGW front end for Ceph RBD. This exposes S3 and Swift API Interfaces. If enabled, this option will prevent Swift from installing.", "weight": 80, "label": "Ceph RadosGW for objects (Swift API)"}, "auth_s3_keystone_ceph": {"restrictions": [{"action": "hide", "condition": "settings:storage.objects_ceph.value == false"}], "description": "This allows to authenticate S3 requests basing on EC2/S3 credentials managed by Keystone. Please note that enabling the integration will increase the latency of S3 requests as well as load on Keystone service. Please consult with Mirantis Technical Bulletin 27 and Mirantis Support on mitigating the risks related with load.", "weight": 82, "value": false, "label": "Enable S3 API Authentication via Keystone in Ceph RadosGW", "type": "checkbox"}, "volumes_block_device": {"restrictions": ["settings:storage.volumes_ceph.value == true"], "description": "High performance block device storage. It is recommended to have at least one Cinder Block Device", "weight": 15, "value": false, "label": "Cinder Block device driver", "type": "checkbox"}, "ephemeral_ceph": {"value": false, "type": "checkbox", "description": "Configures Nova to store ephemeral volumes in RBD. This works best if Ceph is enabled for volumes and images, too. Enables live migration of all types of Ceph backed VMs (without this option, live migration will only work with VMs launched from Cinder volumes).", "weight": 75, "label": "Ceph RBD for ephemeral volumes (Nova)"}, "volumes_lvm": {"restrictions": ["settings:storage.volumes_ceph.value == true"], "description": "It is recommended to have at least one Cinder node.", "weight": 10, "value": true, "label": "Cinder LVM over iSCSI for volumes", "type": "checkbox"}, "mon_key": {"type": "hidden", "value": {"generator": "cephx_key"}}, "bootstrap_osd_key": {"type": "hidden", "value": {"generator": "cephx_key"}}, "admin_key": {"type": "hidden", "value": {"generator": "cephx_key"}}, "osd_pool_size": {"regex": {"source": "^[1-9]\\\\d*$", "error": "Invalid number"}, "description": "Configures the default number of object replicas in Ceph. This number must be equal to or lower than the number of deployed \''Ceph OSD\'' nodes.", "weight": 85, "value": "3", "label": "Ceph object replication factor", "type": "text"}, "images_ceph": {"value": false, "type": "checkbox", "description": "Configures Glance to use the Ceph RBD backend to store images. If enabled, this option will prevent Swift from installing.", "weight": 30, "label": "Ceph RBD for images (Glance)"}, "radosgw_key": {"type": "hidden", "value": {"generator": "cephx_key"}}, "fsid": {"type": "hidden", "value": {"generator": "uuid4"}}, "metadata": {"group": "storage", "weight": 60, "label": "Storage Backends"}}, "public_ssl": {"hostname": {"regex": {"source": "^[a-zA-Z\\\\d]+[-\\\\.\\\\da-zA-Z]*$", "error": "Invalid DNS hostname"}, "restrictions": [{"action": "hide", "condition": "settings:public_ssl.horizon.value == false and settings:public_ssl.services.value == false"}], "description": "Your DNS entries should point to this name. Self-signed certificates also will use this hostname", "weight": 50, "value": "public.fuel.local", "label": "DNS hostname for public TLS endpoints", "type": "text"}, "horizon": {"restrictions": [{"settings:public_ssl.services.value == false": "TLS for OpenStack public endpoints should be enabled"}], "description": "Secure access to Horizon enabling HTTPS instead of HTTP", "weight": 20, "value": false, "label": "HTTPS for Horizon", "type": "checkbox"}, "services": {"value": false, "type": "checkbox", "description": "Enable TLS termination on HAProxy for OpenStack services", "weight": 10, "label": "TLS for OpenStack public endpoints"}, "cert_data": {"restrictions": [{"action": "hide", "condition": "(settings:public_ssl.cert_source.value != \''user_uploaded\'') or (settings:public_ssl.horizon.value == false and settings:public_ssl.services.value == false)"}], "description": "Certificate and private key data, concatenated into a single file", "weight": 40, "value": "", "label": "Certificate", "type": "file"}, "cert_source": {"restrictions": [{"action": "hide", "condition": "settings:public_ssl.horizon.value == false and settings:public_ssl.services.value == false"}], "description": "From where we\''ll get certificate and private key", "weight": 30, "value": "self_signed", "label": "Select source for certificate", "values": [{"data": "self_signed", "description": "Generate private key and certificate that will be signed by this key", "label": "Self-signed"}, {"data": "user_uploaded", "description": "Use pre-generated key and certificate", "label": "I have my own keypair with certificate"}], "type": "radio"}, "metadata": {"group": "security", "weight": 110, "label": "Public TLS"}}, "access": {"metadata": {"group": "general", "weight": 10, "label": "OpenStack Access"}, "password": {"regex": {"source": "\\\\S", "error": "Empty password"}, "description": "Password for Administrator", "weight": 20, "value": "admin", "label": "Password", "type": "password"}, "email": {"regex": {"source": "^\\\\S+@\\\\S+$", "error": "Invalid email"}, "description": "Email address for Administrator", "weight": 40, "value": "admin@localhost", "label": "Email", "type": "text"}, "tenant": {"regex": {"source": "^(?!services$)(?!nova$)(?!glance$)(?!keystone$)(?!neutron$)(?!cinder$)(?!swift$)(?!ceph$)(?!ironic$)(?![Gg]uest$)(?!.* +.*$).+", "error": "Invalid tenant name"}, "description": "Tenant (project) name for Administrator", "weight": 30, "value": "admin", "label": "Tenant", "type": "text"}, "user": {"regex": {"source": "^(?!services$)(?!nova$)(?!glance$)(?!keystone$)(?!neutron$)(?!cinder$)(?!swift$)(?!ceph$)(?!ironic$)(?![Gg]uest$)(?!.* +.*$).+", "error": "Invalid username"}, "description": "Username for Administrator", "weight": 10, "value": "admin", "label": "Username", "type": "text"}}, "syslog": {"syslog_port": {"regex": {"source": "^([1-9][0-9]{0,3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])$", "error": "Invalid syslog port"}, "description": "Remote syslog port", "weight": 20, "value": "514", "label": "Port", "type": "text"}, "syslog_transport": {"values": [{"data": "udp", "description": "", "label": "UDP"}, {"data": "tcp", "description": "", "label": "TCP"}], "type": "radio", "value": "tcp", "weight": 30, "label": "Syslog transport protocol"}, "syslog_server": {"regex": {"source": "^[a-zA-Z\\\\d]+[-\\\\.\\\\da-zA-Z]*$", "error": "Invalid hostname"}, "description": "Remote syslog hostname", "weight": 10, "value": "", "label": "Hostname", "type": "text"}, "metadata": {"group": "logging", "enabled": false, "weight": 50, "toggleable": true, "label": "Syslog"}}, "common": {"propagate_task_deploy": {"value": false, "type": "checkbox", "description": "Enables adaptation of granular tasks for task deployment.", "weight": 12, "label": "Propagate task based deployment."}, "auto_assign_floating_ip": {"restrictions": [{"action": "hide", "condition": "cluster:net_provider == \''neutron\''"}], "group": "network", "description": "If selected, OpenStack will automatically assign a floating IP to a new instance", "weight": 40, "value": false, "label": "Auto assign floating IP", "type": "checkbox"}, "task_deploy": {"type": "hidden", "value": true, "weight": 11}, "auth_key": {"group": "security", "type": "hidden", "value": "", "weight": 70}, "puppet_debug": {"group": "logging", "description": "Debug puppet logging mode provides more information, but requires more disk space.", "weight": 20, "value": true, "label": "Puppet debug logging", "type": "checkbox"}, "libvirt_type": {"group": "compute", "weight": 30, "value": "qemu", "label": "Hypervisor type", "values": [{"data": "kvm", "description": "Choose this type of hypervisor if you run OpenStack on hardware", "label": "KVM"}, {"data": "qemu", "description": "Choose this type of hypervisor if you run OpenStack on virtual hosts.", "label": "QEMU"}], "type": "radio"}, "resume_guests_state_on_host_boot": {"group": "compute", "description": "Whether to resume previous guests state when the host reboots. If enabled, this option causes guests assigned to the host to resume their previous state. If the guest was running a restart will be attempted when nova-compute starts. If the guest was not running previously, a restart will not be attempted.", "weight": 50, "value": true, "label": "Resume guests state on host boot", "type": "checkbox"}, "debug": {"group": "logging", "description": "Debug logging mode provides more information, but requires more disk space.", "weight": 20, "value": false, "label": "OpenStack debug logging", "type": "checkbox"}, "use_cow_images": {"group": "storage", "description": "For most cases you will want qcow format. If it\''s disabled, raw image format will be used to run VMs. OpenStack with raw format currently does not support snapshotting.", "weight": 60, "value": true, "label": "Use qcow format for images", "type": "checkbox"}, "run_ping_checker": {"group": "network", "description": "Uncheck this box if the public gateway will not be available or will not respond to ICMP requests to the deployed cluster. If unchecked, the controllers will not take public gateway availability into account as part of the cluster health.  If the cluster will not have internet access, you will need to make sure to provide proper offline mirrors for the deployment to succeed.", "weight": 50, "value": true, "label": "Public Gateway is Available", "type": "checkbox"}, "nova_quota": {"group": "compute", "description": "Quotas are used to limit CPU and memory usage for tenants. Enabling quotas will increase load on the Nova database.", "weight": 30, "value": false, "label": "Nova quotas", "type": "checkbox"}, "security_groups": {"group": "security", "weight": 20, "value": "iptables_hybrid", "label": "Security Groups", "values": [{"data": "openvswitch", "description": "Choose this driver for OVS based security groups implementation. NOTE: Open vSwitch Firewall Driver requires kernel version >= 4.3 for non-dpdk case.", "label": "Open vSwitch Firewall Driver"}, {"data": "iptables_hybrid", "description": "Choose this driver for iptables/linux bridge based security groups implementation.", "label": "Iptables-based Firewall Driver (No firewall for DPDK case)"}], "type": "radio"}, "metadata": {"weight": 10, "label": "Common"}}, "ssh": {"security_enabled": {"value": false, "type": "checkbox", "description": "NOTE: When enabled, provide at least one working IP address (the Fuel Master node IP is already added).\\nWe recommend adding new addresses instead of replacing the provided Fuel Master node IP.\\nWhen disabled (by default), the admin, management, and storage networks are only allowed to connect to the SSH service.\\n", "weight": 10, "label": "Restrict SSH service on network"}, "security_networks": {"regex": {"source": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\\\/([0-9]|[1-2][0-9]|3[0-2]))*$", "error": "Invalid IPv4/CIDR address"}, "restrictions": [{"action": "hide", "condition": "settings:ssh.security_enabled.value == false"}], "description": "IPv4/CIDR address", "weight": 20, "value": ["{settings.MASTER_IP}"], "label": "Restrict access to", "type": "text_list"}, "brute_force_protection": {"restrictions": [{"action": "hide", "condition": "settings:ssh.security_enabled.value == false"}], "description": "When enabled, the access from all networks (except the provided ones) will be granted, but the networks will be checked against the brute force attack.", "weight": 30, "value": false, "label": "Brute force protection", "type": "checkbox"}, "metadata": {"group": "security", "enabled": true, "weight": 120, "toggleable": false, "label": "SSH security"}}, "use_fedora_lt": {"kernel": {"values": [{"data": "default_kernel", "description": "Install default 2.6.32 kernel.", "label": "CentOS default kernel"}, {"data": "fedora_lt_kernel", "description": "EXPERIMENTAL: Install the Fedora 3.10 longterm kernel instead of the default 2.6.32 kernel. This kernel may not work with all hardware platforms, use with caution.", "label": "Fedora LT kernel"}], "type": "radio", "value": "default_kernel", "weight": 55, "label": "Select kernel"}, "metadata": {"weight": 50, "label": "Use Fedora longterm kernel"}}, "workloads_collector": {"password": {"type": "password", "value": {"generator": "password"}}, "enabled": {"type": "hidden", "value": true}, "user": {"type": "text", "value": "fuel_stats_user"}, "tenant": {"type": "text", "value": "services"}, "metadata": {"restrictions": [{"action": "hide", "condition": "true"}], "group": "general", "weight": 10, "label": "Workloads Collector User"}}, "kernel_params": {"kernel": {"type": "text", "description": "Default kernel parameters", "value": "console=tty0 biosdevname=0 crashkernel=none rootdelay=90 nomodeset", "label": "Initial parameters"}, "metadata": {"group": "general", "weight": 60, "label": "Kernel parameters"}}, "provision": {"method": {"type": "hidden", "value": "image"}, "metadata": {"restrictions": [{"action": "hide", "condition": "true"}], "group": "general", "weight": 80, "label": "Provision"}}, "external_ntp": {"ntp_list": {"regex": {"source": "^[a-zA-Z\\\\d]+[-\\\\.\\\\da-zA-Z]*$", "error": "Invalid NTP server"}, "description": "List of upstream NTP servers", "weight": 10, "min": 1, "value": {"generator": "from_settings", "generator_arg": "NTP_UPSTREAM"}, "label": "NTP server list", "type": "text_list"}, "metadata": {"group": "network", "weight": 40, "label": "Host OS NTP Servers"}}, "corosync": {"group": {"value": "226.94.1.1", "type": "text", "description": "", "weight": 10, "label": "Group"}, "verified": {"value": false, "type": "checkbox", "description": "Set True only if multicast is configured correctly on router.", "weight": 10, "label": "Need to pass network verification."}, "port": {"value": "12000", "type": "text", "description": "", "weight": 20, "label": "Port"}, "metadata": {"restrictions": [{"action": "hide", "condition": "true"}], "group": "general", "weight": 50, "label": "Corosync"}}, "neutron_advanced_configuration": {"neutron_qos": {"value": false, "type": "checkbox", "description": "Enable Neutron QoS advanced service plug-in", "weight": 40, "label": "Neutron QoS"}, "neutron_l3_ha": {"restrictions": [{"message": "Neutron DVR must be disabled in order to use Neutron L3 HA", "condition": "settings:neutron_advanced_configuration.neutron_dvr.value == true"}], "description": "Enable High Availability features for Virtual Routers in Neutron\\nRequires at least 2 Controller nodes to function properly\\n", "weight": 30, "value": false, "label": "Neutron L3 HA", "type": "checkbox"}, "neutron_dvr": {"restrictions": [{"networking_parameters:segmentation_type != \''vlan\'' and settings:neutron_advanced_configuration.neutron_l2_pop.value == false": "DVR requires L2 population to be enabled."}], "description": "Enable Distributed Virtual Routers in Neutron", "weight": 20, "value": false, "label": "Neutron DVR", "type": "checkbox"}, "neutron_l2_pop": {"restrictions": [{"action": "hide", "condition": "networking_parameters:segmentation_type == \''vlan\''"}], "description": "Enable L2 population mechanism in Neutron", "weight": 10, "value": false, "label": "Neutron L2 population", "type": "checkbox"}, "metadata": {"restrictions": [{"action": "hide", "condition": "cluster:net_provider != \''neutron\''"}], "group": "network", "weight": 20, "label": "Neutron Advanced Configuration"}}}}{"generated": {"provision": {"image_data": {"/boot": {"container": "gzip", "uri": "http://{settings.MASTER_IP}:8080/targetimages/centos_7_x86_64-boot.img.gz", "format": "ext2"}, "/": {"container": "gzip", "uri": "http://{settings.MASTER_IP}:8080/targetimages/centos_7_x86_64.img.gz", "format": "ext4"}}}, "base_syslog": {"syslog_port": {"generator": "identical", "generator_arg": "514"}, "syslog_server": {"generator": "ip", "generator_arg": "admin"}}, "puppet": {"modules": "rsync://{settings.MASTER_IP}:/puppet/{cluster.release.version}/modules/", "manifests": "rsync://{settings.MASTER_IP}:/puppet/{cluster.release.version}/manifests/"}, "cobbler": {"profile": {"generator": "identical", "generator_arg": "centos-x86_64"}}, "deployed_before": {"value": false}}, "editable": {"service_user": {"name": {"type": "hidden", "value": "fuel"}, "sudo": {"type": "hidden", "value": "ALL=(ALL) NOPASSWD: ALL"}, "homedir": {"type": "hidden", "value": "/var/lib/fuel"}, "root_password": {"type": "hidden", "value": "r00tme"}, "password": {"type": "hidden", "value": {"generator": "password"}}, "metadata": {"restrictions": [{"action": "hide", "condition": "true"}], "group": "general", "weight": 10, "label": "Service user account"}}, "operator_user": {"name": {"regex": {"source": "\\\\S", "error": "Empty username"}, "description": "Username for operator user", "weight": 50, "value": "fueladmin", "label": "Username", "type": "text"}, "sudo": {"weight": 90, "type": "textarea", "description": "Sudoers configuration directives for operator user, one per line.", "value": "ALL=(ALL) NOPASSWD: ALL", "label": "Sudoers configuration"}, "homedir": {"regex": {"source": "^/\\\\S", "error": "Invalid path"}, "description": "Home directory for operator user", "weight": 70, "value": "/home/fueladmin", "label": "Home directory", "type": "text"}, "password": {"regex": {"source": "\\\\S", "error": "Empty password"}, "description": "Password for operator user", "weight": 60, "value": {"generator": "password"}, "label": "Password", "type": "password"}, "authkeys": {"weight": 80, "type": "textarea", "description": "Public SSH keys to include to operator user\''s authorized keys, one per line.", "value": "", "label": "Authorized SSH keys"}, "metadata": {"group": "general", "weight": 15, "label": "Operating System Access"}}, "cgroups": {"metadata": {"restrictions": [{"action": "hide", "condition": "true"}], "group": "general", "always_editable": true, "weight": 90, "label": "Cgroups conguration for services"}}, "external_dns": {"dns_list": {"regex": {"source": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$", "error": "Invalid IP address"}, "description": "List of upstream DNS servers", "weight": 10, "max": 3, "value": {"generator": "from_settings", "generator_arg": "DNS_UPSTREAM"}, "label": "DNS list", "type": "text_list"}, "metadata": {"group": "network", "weight": 30, "label": "Host OS DNS Servers"}}, "repo_setup": {"repos": {"type": "custom_repo_configuration", "description": "To create a local repository mirror on the Fuel master node, please follow the instructions provided by running \\"fuel-package-updates --help\\" on the Fuel master node.\\nPlease make sure your Fuel master node has Internet access to the repository before attempting to create a mirror.\\n", "value": [{"priority": null, "type": "rpm", "name": "mos", "uri": "http://{settings.MASTER_IP}:8080/{cluster.release.version}/centos/x86_64"}, {"priority": null, "type": "rpm", "name": "mos-updates", "uri": "http://mirror.fuel-infra.org/mos-repos/centos/mos{cluster.release.environment_version}-centos7/updates/x86_64"}, {"priority": null, "type": "rpm", "name": "mos-security", "uri": "http://mirror.fuel-infra.org/mos-repos/centos/mos{cluster.release.environment_version}-centos7/security/x86_64"}, {"priority": 15, "type": "rpm", "name": "Auxiliary", "uri": "http://{settings.MASTER_IP}:8080/{cluster.release.version}/centos/auxiliary"}], "extra_priority": null}, "metadata": {"group": "general", "always_editable": true, "weight": 50, "label": "Repositories"}}, "public_network_assignment": {"assign_to_all_nodes": {"value": false, "type": "checkbox", "description": "When disabled, public network will be assigned to controllers only", "weight": 10, "label": "Assign public network to all nodes"}, "metadata": {"restrictions": [{"action": "hide", "condition": "cluster:net_provider != \''neutron\''"}], "group": "network", "weight": 10, "label": "Public network assignment"}}, "atop": {"service_enabled": {"value": true, "type": "checkbox", "description": "NOTE: When enabled, the service may generate logs up to a gigabyte in size per day.\\nThis should be taken into consideration when determining the correct size for the log partition.\\n", "weight": 10, "label": "Enable atop service"}, "interval": {"regex": {"source": "^[1-9]\\\\d*$", "error": "Should be a number of seconds"}, "restrictions": [{"action": "hide", "condition": "settings:atop.service_enabled.value == false"}], "description": "Interval between the snapshots in seconds", "weight": 20, "value": "20", "label": "Interval between the snapshots", "type": "text"}, "rotate": {"regex": {"source": "^[1-9]\\\\d*$", "error": "Should be a number of days"}, "restrictions": [{"action": "hide", "condition": "settings:atop.service_enabled.value == false"}], "description": "Number of days to keep log files", "weight": 30, "value": "7", "label": "Rotate days", "type": "text"}, "metadata": {"group": "logging", "enabled": true, "weight": 60, "toggleable": false, "label": "Advanced System & Process Monitor (atop)"}}, "storage": {"volumes_ceph": {"restrictions": ["settings:storage.volumes_lvm.value == true or settings:storage.volumes_block_device.value == true"], "description": "Configures Cinder to store volumes in Ceph RBD images.", "weight": 20, "value": false, "label": "Ceph RBD for volumes (Cinder)", "type": "checkbox"}, "objects_ceph": {"value": false, "type": "checkbox", "description": "Configures RadosGW front end for Ceph RBD. This exposes S3 and Swift API Interfaces. If enabled, this option will prevent Swift from installing.", "weight": 80, "label": "Ceph RadosGW for objects (Swift API)"}, "auth_s3_keystone_ceph": {"restrictions": [{"action": "hide", "condition": "settings:storage.objects_ceph.value == false"}], "description": "This allows to authenticate S3 requests basing on EC2/S3 credentials managed by Keystone. Please note that enabling the integration will increase the latency of S3 requests as well as load on Keystone service. Please consult with Mirantis Technical Bulletin 27 and Mirantis Support on mitigating the risks related with load.", "weight": 82, "value": false, "label": "Enable S3 API Authentication via Keystone in Ceph RadosGW", "type": "checkbox"}, "volumes_block_device": {"restrictions": ["settings:storage.volumes_ceph.value == true"], "description": "High performance block device storage. It is recommended to have at least one Cinder Block Device", "weight": 15, "value": false, "label": "Cinder Block device driver", "type": "checkbox"}, "ephemeral_ceph": {"value": false, "type": "checkbox", "description": "Configures Nova to store ephemeral volumes in RBD. This works best if Ceph is enabled for volumes and images, too. Enables live migration of all types of Ceph backed VMs (without this option, live migration will only work with VMs launched from Cinder volumes).", "weight": 75, "label": "Ceph RBD for ephemeral volumes (Nova)"}, "volumes_lvm": {"restrictions": ["settings:storage.volumes_ceph.value == true"], "description": "It is recommended to have at least one Cinder node.", "weight": 10, "value": true, "label": "Cinder LVM over iSCSI for volumes", "type": "checkbox"}, "mon_key": {"type": "hidden", "value": {"generator": "cephx_key"}}, "bootstrap_osd_key": {"type": "hidden", "value": {"generator": "cephx_key"}}, "admin_key": {"type": "hidden", "value": {"generator": "cephx_key"}}, "osd_pool_size": {"regex": {"source": "^[1-9]\\\\d*$", "error": "Invalid number"}, "description": "Configures the default number of object replicas in Ceph. This number must be equal to or lower than the number of deployed \''Ceph OSD\'' nodes.", "weight": 85, "value": "3", "label": "Ceph object replication factor", "type": "text"}, "images_ceph": {"value": false, "type": "checkbox", "description": "Configures Glance to use the Ceph RBD backend to store images. If enabled, this option will prevent Swift from installing.", "weight": 30, "label": "Ceph RBD for images (Glance)"}, "radosgw_key": {"type": "hidden", "value": {"generator": "cephx_key"}}, "fsid": {"type": "hidden", "value": {"generator": "uuid4"}}, "metadata": {"group": "storage", "weight": 60, "label": "Storage Backends"}}, "public_ssl": {"hostname": {"regex": {"source": "^[a-zA-Z\\\\d]+[-\\\\.\\\\da-zA-Z]*$", "error": "Invalid DNS hostname"}, "restrictions": [{"action": "hide", "condition": "settings:public_ssl.horizon.value == false and settings:public_ssl.services.value == false"}], "description": "Your DNS entries should point to this name. Self-signed certificates also will use this hostname", "weight": 50, "value": "public.fuel.local", "label": "DNS hostname for public TLS endpoints", "type": "text"}, "horizon": {"restrictions": [{"settings:public_ssl.services.value == false": "TLS for OpenStack public endpoints should be enabled"}], "description": "Secure access to Horizon enabling HTTPS instead of HTTP", "weight": 20, "value": false, "label": "HTTPS for Horizon", "type": "checkbox"}, "services": {"value": false, "type": "checkbox", "description": "Enable TLS termination on HAProxy for OpenStack services", "weight": 10, "label": "TLS for OpenStack public endpoints"}, "cert_data": {"restrictions": [{"action": "hide", "condition": "(settings:public_ssl.cert_source.value != \''user_uploaded\'') or (settings:public_ssl.horizon.value == false and settings:public_ssl.services.value == false)"}], "description": "Certificate and private key data, concatenated into a single file", "weight": 40, "value": "", "label": "Certificate", "type": "file"}, "cert_source": {"restrictions": [{"action": "hide", "condition": "settings:public_ssl.horizon.value == false and settings:public_ssl.services.value == false"}], "description": "From where we\''ll get certificate and private key", "weight": 30, "value": "self_signed", "label": "Select source for certificate", "values": [{"data": "self_signed", "description": "Generate private key and certificate that will be signed by this key", "label": "Self-signed"}, {"data": "user_uploaded", "description": "Use pre-generated key and certificate", "label": "I have my own keypair with certificate"}], "type": "radio"}, "metadata": {"group": "security", "weight": 110, "label": "Public TLS"}}, "access": {"metadata": {"group": "general", "weight": 10, "label": "OpenStack Access"}, "password": {"regex": {"source": "\\\\S", "error": "Empty password"}, "description": "Password for Administrator", "weight": 20, "value": "admin", "label": "Password", "type": "password"}, "email": {"regex": {"source": "^\\\\S+@\\\\S+$", "error": "Invalid email"}, "description": "Email address for Administrator", "weight": 40, "value": "admin@localhost", "label": "Email", "type": "text"}, "tenant": {"regex": {"source": "^(?!services$)(?!nova$)(?!glance$)(?!keystone$)(?!neutron$)(?!cinder$)(?!swift$)(?!ceph$)(?!ironic$)(?![Gg]uest$)(?!.* +.*$).+", "error": "Invalid tenant name"}, "description": "Tenant (project) name for Administrator", "weight": 30, "value": "admin", "label": "Tenant", "type": "text"}, "user": {"regex": {"source": "^(?!services$)(?!nova$)(?!glance$)(?!keystone$)(?!neutron$)(?!cinder$)(?!swift$)(?!ceph$)(?!ironic$)(?![Gg]uest$)(?!.* +.*$).+", "error": "Invalid username"}, "description": "Username for Administrator", "weight": 10, "value": "admin", "label": "Username", "type": "text"}}, "syslog": {"syslog_port": {"regex": {"source": "^([1-9][0-9]{0,3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])$", "error": "Invalid syslog port"}, "description": "Remote syslog port", "weight": 20, "value": "514", "label": "Port", "type": "text"}, "syslog_transport": {"values": [{"data": "udp", "description": "", "label": "UDP"}, {"data": "tcp", "description": "", "label": "TCP"}], "type": "radio", "value": "tcp", "weight": 30, "label": "Syslog transport protocol"}, "syslog_server": {"regex": {"source": "^[a-zA-Z\\\\d]+[-\\\\.\\\\da-zA-Z]*$", "error": "Invalid hostname"}, "description": "Remote syslog hostname", "weight": 10, "value": "", "label": "Hostname", "type": "text"}, "metadata": {"group": "logging", "enabled": false, "weight": 50, "toggleable": true, "label": "Syslog"}}, "common": {"propagate_task_deploy": {"value": false, "type": "checkbox", "description": "Enables adaptation of granular tasks for task deployment.", "weight": 12, "label": "Propagate task based deployment."}, "auto_assign_floating_ip": {"restrictions": [{"action": "hide", "condition": "cluster:net_provider == \''neutron\''"}], "group": "network", "description": "If selected, OpenStack will automatically assign a floating IP to a new instance", "weight": 40, "value": false, "label": "Auto assign floating IP", "type": "checkbox"}, "task_deploy": {"type": "hidden", "value": true, "weight": 11}, "auth_key": {"group": "security", "type": "hidden", "value": "", "weight": 70}, "puppet_debug": {"group": "logging", "description": "Debug puppet logging mode provides more information, but requires more disk space.", "weight": 20, "value": true, "label": "Puppet debug logging", "type": "checkbox"}, "libvirt_type": {"group": "compute", "weight": 30, "value": "qemu", "label": "Hypervisor type", "values": [{"data": "kvm", "description": "Choose this type of hypervisor if you run OpenStack on hardware", "label": "KVM"}, {"data": "qemu", "description": "Choose this type of hypervisor if you run OpenStack on virtual hosts.", "label": "QEMU"}], "type": "radio"}, "resume_guests_state_on_host_boot": {"group": "compute", "description": "Whether to resume previous guests state when the host reboots. If enabled, this option causes guests assigned to the host to resume their previous state. If the guest was running a restart will be attempted when nova-compute starts. If the guest was not running previously, a restart will not be attempted.", "weight": 50, "value": true, "label": "Resume guests state on host boot", "type": "checkbox"}, "debug": {"group": "logging", "description": "Debug logging mode provides more information, but requires more disk space.", "weight": 20, "value": false, "label": "OpenStack debug logging", "type": "checkbox"}, "use_cow_images": {"group": "storage", "description": "For most cases you will want qcow format. If it\''s disabled, raw image format will be used to run VMs. OpenStack with raw format currently does not support snapshotting.", "weight": 60, "value": true, "label": "Use qcow format for images", "type": "checkbox"}, "run_ping_checker": {"group": "network", "description": "Uncheck this box if the public gateway will not be available or will not respond to ICMP requests to the deployed cluster. If unchecked, the controllers will not take public gateway availability into account as part of the cluster health.  If the cluster will not have internet access, you will need to make sure to provide proper offline mirrors for the deployment to succeed.", "weight": 50, "value": true, "label": "Public Gateway is Available", "type": "checkbox"}, "nova_quota": {"group": "compute", "description": "Quotas are used to limit CPU and memory usage for tenants. Enabling quotas will increase load on the Nova database.", "weight": 30, "value": false, "label": "Nova quotas", "type": "checkbox"}, "security_groups": {"group": "security", "weight": 20, "value": "iptables_hybrid", "label": "Security Groups", "values": [{"data": "openvswitch", "description": "Choose this driver for OVS based security groups implementation. NOTE: Open vSwitch Firewall Driver requires kernel version >= 4.3 for non-dpdk case.", "label": "Open vSwitch Firewall Driver"}, {"data": "iptables_hybrid", "description": "Choose this driver for iptables/linux bridge based security groups implementation.", "label": "Iptables-based Firewall Driver (No firewall for DPDK case)"}], "type": "radio"}, "metadata": {"weight": 10, "label": "Common"}}, "ssh": {"security_enabled": {"value": false, "type": "checkbox", "description": "NOTE: When enabled, provide at least one working IP address (the Fuel Master node IP is already added).\\nWe recommend adding new addresses instead of replacing the provided Fuel Master node IP.\\nWhen disabled (by default), the admin, management, and storage networks are only allowed to connect to the SSH service.\\n", "weight": 10, "label": "Restrict SSH service on network"}, "security_networks": {"regex": {"source": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\\\/([0-9]|[1-2][0-9]|3[0-2]))*$", "error": "Invalid IPv4/CIDR address"}, "restrictions": [{"action": "hide", "condition": "settings:ssh.security_enabled.value == false"}], "description": "IPv4/CIDR address", "weight": 20, "value": ["{settings.MASTER_IP}"], "label": "Restrict access to", "type": "text_list"}, "brute_force_protection": {"restrictions": [{"action": "hide", "condition": "settings:ssh.security_enabled.value == false"}], "description": "When enabled, the access from all networks (except the provided ones) will be granted, but the networks will be checked against the brute force attack.", "weight": 30, "value": false, "label": "Brute force protection", "type": "checkbox"}, "metadata": {"group": "security", "enabled": true, "weight": 120, "toggleable": false, "label": "SSH security"}}, "use_fedora_lt": {"kernel": {"values": [{"data": "default_kernel", "description": "Install default 2.6.32 kernel.", "label": "CentOS default kernel"}, {"data": "fedora_lt_kernel", "description": "EXPERIMENTAL: Install the Fedora 3.10 longterm kernel instead of the default 2.6.32 kernel. This kernel may not work with all hardware platforms, use with caution.", "label": "Fedora LT kernel"}], "type": "radio", "value": "default_kernel", "weight": 55, "label": "Select kernel"}, "metadata": {"weight": 50, "label": "Use Fedora longterm kernel"}}, "workloads_collector": {"password": {"type": "password", "value": {"generator": "password"}}, "enabled": {"type": "hidden", "value": true}, "user": {"type": "text", "value": "fuel_stats_user"}, "tenant": {"type": "text", "value": "services"}, "metadata": {"restrictions": [{"action": "hide", "condition": "true"}], "group": "general", "weight": 10, "label": "Workloads Collector User"}}, "kernel_params": {"kernel": {"type": "text", "description": "Default kernel parameters", "value": "console=tty0 biosdevname=0 crashkernel=none rootdelay=90 nomodeset", "label": "Initial parameters"}, "metadata": {"group": "general", "weight": 60, "label": "Kernel parameters"}}, "provision": {"method": {"type": "hidden", "value": "image"}, "metadata": {"restrictions": [{"action": "hide", "condition": "true"}], "group": "general", "weight": 80, "label": "Provision"}}, "external_ntp": {"ntp_list": {"regex": {"source": "^[a-zA-Z\\\\d]+[-\\\\.\\\\da-zA-Z]*$", "error": "Invalid NTP server"}, "description": "List of upstream NTP servers", "weight": 10, "min": 1, "value": {"generator": "from_settings", "generator_arg": "NTP_UPSTREAM"}, "label": "NTP server list", "type": "text_list"}, "metadata": {"group": "network", "weight": 40, "label": "Host OS NTP Servers"}}, "corosync": {"group": {"value": "226.94.1.1", "type": "text", "description": "", "weight": 10, "label": "Group"}, "verified": {"value": false, "type": "checkbox", "description": "Set True only if multicast is configured correctly on router.", "weight": 10, "label": "Need to pass network verification."}, "port": {"value": "12000", "type": "text", "description": "", "weight": 20, "label": "Port"}, "metadata": {"restrictions": [{"action": "hide", "condition": "true"}], "group": "general", "weight": 50, "label": "Corosync"}}, "neutron_advanced_configuration": {"neutron_qos": {"value": false, "type": "checkbox", "description": "Enable Neutron QoS advanced service plug-in", "weight": 40, "label": "Neutron QoS"}, "neutron_l3_ha": {"restrictions": [{"message": "Neutron DVR must be disabled in order to use Neutron L3 HA", "condition": "settings:neutron_advanced_configuration.neutron_dvr.value == true"}], "description": "Enable High Availability features for Virtual Routers in Neutron\\nRequires at least 2 Controller nodes to function properly\\n", "weight": 30, "value": false, "label": "Neutron L3 HA", "type": "checkbox"}, "neutron_dvr": {"restrictions": [{"networking_parameters:segmentation_type != \''vlan\'' and settings:neutron_advanced_configuration.neutron_l2_pop.value == false": "DVR requires L2 population to be enabled."}], "description": "Enable Distributed Virtual Routers in Neutron", "weight": 20, "value": false, "label": "Neutron DVR", "type": "checkbox"}, "neutron_l2_pop": {"restrictions": [{"action": "hide", "condition": "networking_parameters:segmentation_type == \''vlan\''"}], "description": "Enable L2 population mechanism in Neutron", "weight": 10, "value": false, "label": "Neutron L2 population", "type": "checkbox"}, "metadata": {"restrictions": [{"action": "hide", "condition": "cluster:net_provider != \''neutron\''"}], "group": "network", "weight": 20, "label": "Neutron Advanced Configuration"}}}}','{"rule_to_pick_boot_disk": [{"regex": "^nvme", "type": "exclude_disks_by_name", "description": "NVMe drives should be skipped as accessing such drives during the boot typically requires using UEFI which is still not supported by fuel-agent (it always installs BIOS variant of  grub). grub bug (http://savannah.gnu.org/bugs/?41883)"}, {"regex": "^md", "type": "pick_root_disk_if_disk_name_match", "root_mount": "/", "description": "If we have /root on fake raid, then /boot partition should land on to it too. We can''t proceed with grub-install otherwise."}], "volumes_roles_mapping": {"compute": [{"id": "os", "allocate_size": "min"}, {"id": "vm", "allocate_size": "all"}], "mongo": [{"id": "os", "allocate_size": "min"}, {"id": "mongo", "allocate_size": "all"}], "virt": [{"id": "os", "allocate_size": "min"}, {"id": "vm", "allocate_size": "all"}], "base-os": [{"id": "os", "allocate_size": "min"}], "controller": [{"id": "os", "allocate_size": "min"}, {"id": "logs", "allocate_size": "min"}, {"id": "image", "allocate_size": "all"}, {"id": "mysql", "allocate_size": "min"}, {"id": "horizon", "allocate_size": "min"}], "other": [{"id": "os", "allocate_size": "all"}], "cinder-block-device": [{"id": "os", "allocate_size": "min"}, {"id": "cinder-block-device", "allocate_size": "full-disk"}], "ironic": [{"id": "os", "allocate_size": "min"}, {"id": "logs", "allocate_size": "min"}], "ceph-osd": [{"id": "os", "allocate_size": "min"}, {"id": "cephjournal", "allocate_size": "min"}, {"id": "ceph", "allocate_size": "full-disk"}], "cinder": [{"id": "os", "allocate_size": "min"}, {"id": "cinder", "allocate_size": "all"}]}, "volumes": [{"min_size": {"generator": "calc_min_os_size"}, "type": "vg", "id": "os", "volumes": [{"mount": "/", "size": {"generator": "calc_total_root_vg"}, "type": "lv", "name": "root", "file_system": "ext4"}, {"mount": "swap", "size": {"generator": "calc_swap_size"}, "type": "lv", "name": "swap", "file_system": "swap"}], "label": "Base System"}, {"min_size": {"generator_args": [10], "generator": "calc_gb_to_mb"}, "type": "vg", "id": "logs", "volumes": [{"mount": "/var/log", "size": {"generator_args": ["logs"], "generator": "calc_total_vg"}, "type": "lv", "name": "log", "file_system": "ext4"}], "label": "Logs"}, {"min_size": {"generator": "calc_min_mongo_size"}, "type": "vg", "id": "mongo", "volumes": [{"mount": "/var/lib/mongo", "size": {"generator_args": ["mongo"], "generator": "calc_total_vg"}, "type": "lv", "name": "mongodb", "file_system": "ext4"}], "label": "MongoDB"}, {"partition_guid": "4fbd7e29-9d25-41b8-afd0-062c0ceff05d", "name": "Ceph", "mount": "none", "label": "Ceph", "min_size": {"generator": "calc_min_ceph_size"}, "type": "partition", "id": "ceph", "file_system": "none"}, {"partition_guid": "45b0969e-9b03-4f30-b4c6-b4b80ceff106", "name": "Ceph Journal", "mount": "none", "label": "Ceph Journal", "min_size": {"generator": "calc_min_ceph_journal_size"}, "type": "partition", "id": "cephjournal", "file_system": "none"}, {"min_size": {"generator": "calc_min_mysql_size"}, "type": "vg", "id": "mysql", "volumes": [{"mount": "/var/lib/mysql", "size": {"generator_args": ["mysql"], "generator": "calc_total_vg"}, "type": "lv", "name": "root", "file_system": "ext4"}], "label": "Mysql Database"}, {"min_size": {"generator": "calc_min_vm_size"}, "type": "vg", "id": "vm", "volumes": [{"mount": "/var/lib/nova", "size": {"generator_args": ["vm"], "generator": "calc_total_vg"}, "type": "lv", "name": "nova", "file_system": "xfs"}], "label": "Virtual Storage"}, {"min_size": {"generator": "calc_min_glance_size"}, "type": "vg", "id": "image", "volumes": [{"mount": "/var/lib/glance", "size": {"generator_args": ["image"], "generator": "calc_total_vg"}, "type": "lv", "name": "glance", "file_system": "xfs"}], "label": "Image Storage"}, {"min_size": {"generator_args": [11], "generator": "calc_gb_to_mb"}, "type": "vg", "id": "horizon", "volumes": [{"mount": "/var/lib/horizon", "size": {"generator_args": ["horizon"], "generator": "calc_total_vg"}, "type": "lv", "name": "horizontmp", "file_system": "xfs"}], "label": "Horizon Temp Storage"}, {"min_size": {"generator": "calc_min_cinder_size"}, "type": "vg", "id": "cinder", "volumes": [], "label": "Cinder"}, {"mount": "none", "label": "Cinder Block Device", "min_size": {"generator": "calc_min_cinder_size"}, "volumes": [], "type": "vg", "id": "cinder-block-device"}]}','{"ha_compact": {"description": "This configuration Deploys OpenStack ready for high availability (HA). Controller services are prepared for HA by setting up a base MySQL/Galera, RabbitMQ and HAProxy so that additional controllers can be deployed NOW, or scaled out LATER. 3 or more controllers are required for a true HA environment."}}','{"compute": {"limits": {"recommended": 1}, "group": "compute", "name": "Compute", "weight": 20, "tags": ["compute"], "fault_tolerance": "2%", "public_for_dvr_required": true, "description": "A Compute node creates, manages, and terminates virtual machine instances."}, "mongo": {"restrictions": [{"message": "Ceilometer should be enabled in the environment settings.", "condition": "settings:additional_components.ceilometer.value == false"}, {"message": "You are already using external MongoDB.", "condition": "settings:additional_components.mongo.value == true"}, {"action": "hide", "condition": "not (''experimental'' in version:feature_groups)"}], "group": "other", "name": "Telemetry - MongoDB", "limits": {"overrides": [{"max": 1, "message": "At most 1 MongoDB node can be added for non-HA deployment", "condition": "cluster:mode != ''ha_compact''"}, {"recommended": 3, "message": "At least 3 MongoDB nodes are recommended for HA deployment.", "condition": "cluster:mode == ''ha_compact''"}], "min": 1}, "tags": ["mongo"], "weight": 60, "conflicts": ["compute", "ceph-osd"], "description": "A feature-complete and recommended database for storage of metering data from OpenStack Telemetry (Ceilometer)."}, "virt": {"restrictions": [{"action": "hide", "message": "Advanced feature should be enabled in feature groups", "condition": "not (''advanced'' in version:feature_groups)"}], "group": "compute", "name": "Virtual", "weight": 80, "tags": ["virt"], "public_ip_required": true, "conflicts": ["controller", "base-os"], "description": "ADVANCED: Make available possibilities to spawn vms on this node that can be assign as a normal nodes."}, "base-os": {"name": "Operating System", "group": "other", "description": "Install base Operating System without additional packages and configuration.", "weight": 70, "tags": ["base-os"]}, "controller": {"limits": {"recommended": 3, "overrides": [{"message": "Neutron L3 HA requires at least 2 Controller nodes to function properly.", "condition": "settings:neutron_advanced_configuration.neutron_l3_ha.value == true", "min": 2}], "min": 1}, "group": "base", "description": "The Controller initiates orchestration activities and provides an external API.  Other components like Glance (image storage), Keystone (identity management), Horizon (OpenStack dashboard) and Nova-Scheduler are installed on the controller as well.", "weight": 10, "tags": ["controller", "rabbitmq", "database", "keystone", "neutron"], "update_required": ["compute", "cinder"], "public_ip_required": true, "conflicts": ["compute"], "public_for_dvr_required": true, "name": "Controller"}, "cinder": {"restrictions": [{"message": "Cinder LVM should be enabled in the environment settings.", "condition": "settings:storage.volumes_lvm.value == false"}, {"message": "Ceph RBD cannot be used with Cinder", "condition": "settings:storage.volumes_ceph.value == true"}], "group": "storage", "name": "Cinder", "limits": {"recommended": 1}, "tags": ["cinder"], "weight": 30, "description": "Cinder provides scheduling of block storage resources, typically delivered over iSCSI and other compatible backend storage systems. Block storage can be used for database storage, expandable file systems, or to provide a server with access to raw block level devices."}, "ironic": {"restrictions": [{"message": "Ironic should be enabled in the environment settings.", "condition": "settings:additional_components.ironic.value == false"}], "group": "compute", "name": "Ironic", "limits": {"recommended": 3, "min": 1}, "tags": ["ironic"], "weight": 100, "conflicts": ["compute"], "description": "Ironic conductor."}, "ceph-osd": {"restrictions": [{"message": "Ceph should be enabled in the environment settings.", "condition": "settings:storage.volumes_ceph.value == false and settings:storage.images_ceph.value == false and settings:storage.ephemeral_ceph.value == false and settings:storage.objects_ceph.value == false"}], "group": "storage", "name": "Ceph OSD", "limits": {"min": "settings:storage.osd_pool_size.value"}, "tags": ["ceph-osd"], "weight": 50, "update_once": ["controller"], "description": "Ceph storage can be configured to provide storage for block volumes (Cinder), images (Glance) and ephemeral instance storage (Nova). It can also provide object storage through the S3 and Swift API (See settings to enable each)."}, "cinder-block-device": {"restrictions": [{"message": "Cinder Block Device driver should be enabled in the environment settings.", "condition": "settings:storage.volumes_block_device.value == false"}, {"message": "Ceph RBD cannot be used with Cinder Block Device", "condition": "settings:storage.volumes_ceph.value == true"}], "group": "storage", "name": "Cinder Block Device", "weight": 35, "tags": ["cinder-block-device"], "public_ip_required": false, "conflicts": ["controller", "cinder", "ceph-osd"], "description": "Host node for Cinder Block Devices."}}','["ha_compact"]','[{"default_mapping": "management", "id": "keystone/api", "properties": {"subnet": true, "vip": [], "gateway": false}}, {"default_mapping": "fuelweb_admin", "id": "admin/pxe", "properties": {"subnet": true, "vip": [], "gateway": true}}, {"default_mapping": "management", "id": "swift/api", "properties": {"subnet": true, "vip": [], "gateway": false}}, {"default_mapping": "management", "id": "neutron/api", "properties": {"subnet": true, "vip": [], "gateway": false}}, {"default_mapping": "management", "id": "sahara/api", "properties": {"subnet": true, "vip": [], "gateway": false}}, {"default_mapping": "management", "id": "aodh/api", "properties": {"subnet": true, "vip": [], "gateway": false}}, {"default_mapping": "management", "id": "ceilometer/api", "properties": {"subnet": true, "vip": [], "gateway": false}}, {"default_mapping": "management", "id": "cinder/api", "properties": {"subnet": true, "vip": [], "gateway": false}}, {"default_mapping": "management", "id": "glance/api", "properties": {"subnet": true, "vip": [], "gateway": false}}, {"default_mapping": "management", "id": "glance/glare", "properties": {"subnet": true, "vip": [], "gateway": false}}, {"default_mapping": "management", "id": "heat/api", "properties": {"subnet": true, "vip": [], "gateway": false}}, {"default_mapping": "management", "id": "nova/api", "properties": {"subnet": true, "vip": [], "gateway": false}}, {"default_mapping": "management", "id": "murano/api", "properties": {"subnet": true, "vip": [], "gateway": false}}, {"default_mapping": "management", "id": "murano/cfapi", "properties": {"subnet": true, "vip": [], "gateway": false}}, {"default_mapping": "management", "id": "horizon", "properties": {"subnet": true, "vip": [], "gateway": false}}, {"default_mapping": "management", "id": "mgmt/memcache", "properties": {"subnet": true, "vip": [], "gateway": false}}, {"default_mapping": "management", "id": "mgmt/database", "properties": {"subnet": true, "vip": [], "gateway": false}}, {"default_mapping": "management", "id": "mgmt/messaging", "properties": {"subnet": true, "vip": [], "gateway": false}}, {"default_mapping": "management", "id": "mgmt/corosync", "properties": {"subnet": true, "vip": [], "gateway": false}}, {"default_mapping": "management", "id": "mgmt/vip", "properties": {"subnet": true, "vip": [{"alias": "management_vrouter_vip", "namespace": "vrouter", "name": "vrouter"}, {"alias": "management_vip", "namespace": "haproxy", "name": "management"}], "gateway": false}}, {"default_mapping": "public", "id": "public/vip", "properties": {"subnet": true, "vip": [{"alias": "public_vrouter_vip", "vendor_specific": {"iptables_rules": {"ns_start": ["iptables -t nat -A POSTROUTING -o <%INT%> -j MASQUERADE"], "ns_stop": ["iptables -t nat -D POSTROUTING -o <%INT%> -j MASQUERADE"]}}, "namespace": "vrouter", "name": "vrouter_pub"}, {"alias": "public_vip", "namespace": "haproxy", "name": "public"}], "gateway": true}}, {"default_mapping": "private", "id": "neutron/private", "properties": {"subnet": false, "vip": [], "gateway": false}}, {"default_mapping": "private", "id": "neutron/mesh", "properties": {"subnet": true, "vip": [], "gateway": false}}, {"default_mapping": "public", "id": "neutron/floating", "properties": {"subnet": false, "vip": [], "gateway": false}}, {"default_mapping": "storage", "id": "swift/replication", "properties": {"subnet": true, "vip": [], "gateway": false}}, {"default_mapping": "storage", "id": "ceph/public", "properties": {"subnet": true, "vip": [], "gateway": false}}, {"default_mapping": "public", "id": "ceph/radosgw", "properties": {"subnet": true, "vip": [], "gateway": false}}, {"default_mapping": "storage", "id": "ceph/replication", "properties": {"subnet": true, "vip": [], "gateway": false}}, {"default_mapping": "storage", "id": "cinder/iscsi", "properties": {"subnet": true, "vip": [], "gateway": false}}, {"default_mapping": "management", "id": "mongo/db", "properties": {"subnet": true, "vip": [], "gateway": false}}, {"default_mapping": "fuelweb_admin", "id": "fw-admin", "properties": {"subnet": true, "vip": [], "gateway": true}}, {"default_mapping": "management", "id": "management", "properties": {"subnet": true, "vip": [], "gateway": false}}, {"default_mapping": "public", "id": "ex", "properties": {"subnet": true, "vip": [], "gateway": true}}, {"default_mapping": "storage", "id": "storage", "properties": {"subnet": true, "vip": [], "gateway": false}}, {"default_mapping": "management", "id": "nova/migration", "properties": {"subnet": true, "vip": [], "gateway": false}}, {"default_mapping": "management", "id": "ironic/api", "properties": {"subnet": true, "vip": [], "gateway": false}}, {"default_mapping": "baremetal", "id": "ironic/baremetal", "properties": {"subnet": true, "vip": [{"alias": "baremetal_vip", "vendor_specific": {"iptables_rules": {"ns_start": ["iptables -A INPUT -i <%INT%> -s <%CIDR%> -d <%IP%> -p tcp -m multiport --dports 6385,8080 -m state --state NEW -j ACCEPT", "iptables -A INPUT -i <%INT%> -s <%CIDR%> -d <%IP%> -m state --state ESTABLISHED,RELATED -j ACCEPT", "iptables -A INPUT -i <%INT%> -j DROP"], "ns_stop": ["iptables -D INPUT -i <%INT%> -s <%CIDR%> -d <%IP%> -p tcp -m multiport --dports 6385,8080 -m state --state NEW -j ACCEPT", "iptables -D INPUT -i <%INT%> -s <%CIDR%> -d <%IP%> -m state --state ESTABLISHED,RELATED -j ACCEPT", "iptables -D INPUT -i <%INT%> -j DROP"]}}, "namespace": "haproxy", "name": "baremetal"}], "gateway": false}}]','{volume_manager,network_manager}','[{"name": "hypervisor:docker", "weight": 5, "default": true, "bind": [["settings:common.libvirt_type.value", "qemu"]], "label": "docker", "compatible": [{"name": "hypervisor:*"}], "description": "kubernetes backend"}, {"default": true, "compatible": [{"name": "hypervisor:*"}, {"name": "network:docker:*"}], "name": "network:docker:calico", "weight": 1000, "label": "calico"}, {"compatible": [{"name": "hypervisor:docker"}, {"name": "network:docker"}, {"name": "network:docker:calico"}], "bind": [["settings:storage.volumes_ceph.value", true], ["settings:storage.volumes_lvm.value", false]], "name": "storage:block:ceph", "weight": 10, "label": "dialog.create_cluster_wizard.storage.ceph"}, {"compatible": [{"name": "hypervisor:docker"}, {"name": "network:docker"}, {"name": "network:docker:calico"}], "bind": [["settings:storage.volumes_ceph.value", true], ["settings:storage.volumes_lvm.value", false]], "name": "storage:block:ceph", "weight": 10, "label": "dialog.create_cluster_wizard.storage.ceph"}, {"compatible": [{"name": "hypervisor:docker"}, {"name": "network:docker"}, {"name": "network:docker:calico"}, {"name": "storage:block:ceph"}], "bind": ["settings:additional_components.helm.value", true], "name": "additional_service:helm", "weight": 10, "label": "helm"}]','{}','{"dpdk": {"enabled": {"restrictions": [{"settings:common.libvirt_type.value != ''kvm''": "Only KVM hypervisor works with DPDK"}], "description": "The Data Plane Development Kit (DPDK) provides high-performance packet processing libraries and user space drivers.", "weight": 10, "value": false, "label": "Enable DPDK", "type": "checkbox"}, "metadata": {"restrictions": [{"action": "hide", "condition": "not (''experimental'' in version:feature_groups)"}], "weight": 40, "label": "DPDK"}}, "mtu": {"value": {"weight": 10, "min": 42, "max": 65536, "nullable": true, "value": null, "label": "Use Custom MTU", "type": "number"}, "metadata": {"weight": 20, "label": "MTU"}}, "sriov": {"numvfs": {"restrictions": ["nic_attributes:sriov.enabled.value == false"], "weight": 20, "nullable": true, "min": 1, "value": null, "label": "Custom Number of Virtual Functions", "type": "number"}, "enabled": {"restrictions": [{"settings:common.libvirt_type.value != ''kvm''": "Only KVM hypervisor works with SR-IOV"}], "description": "Single-root I/O Virtualization (SR-IOV) is a specification that, when implemented by a physical PCIe device, enables it to appear as multiple separate PCIe devices. This enables multiple virtualized guests to share direct access to the physical device, offering improved performance over an equivalent virtual device.", "weight": 10, "value": false, "label": "Enable SR-IOV", "type": "checkbox"}, "physnet": {"regex": {"source": "^[A-Za-z0-9 _]*[A-Za-z0-9][A-Za-z0-9 _]*$", "error": "Invalid physical network name"}, "restrictions": ["nic_attributes:sriov.enabled.value == false", {"action": "none", "message": "Only \"physnet2\" will be configured by Fuel in Neutron. Configuration of other physical networks is up to Operator or plugin. Fuel will just configure appropriate pci_passthrough_whitelist option in nova.conf for such interface and physical networks.", "condition": "nic_attributes:sriov.physnet.value != ''physnet2''"}], "weight": 30, "value": "", "label": "Physical Network Name", "type": "text"}, "metadata": {"weight": 30, "label": "SR-IOV"}}, "offloading": {"disable": {"type": "checkbox", "weight": 10, "value": false, "label": "Disable Offloading"}, "modes": {"type": "offloading_modes", "weight": 20, "value": {}, "label": "Offloading Modes"}, "metadata": {"weight": 10, "label": "Offloading"}}}','{"lacp_rate": {"value": {"type": "select", "weight": 10, "value": "", "label": "Lacp rate"}, "metadata": {"weight": 60, "label": "Lacp rate"}}, "xmit_hash_policy": {"value": {"type": "select", "weight": 10, "value": "", "label": "Xmit hash policy"}, "metadata": {"weight": 70, "label": "Xmit hash policy"}}, "offloading": {"disable": {"type": "checkbox", "weight": 10, "value": false, "label": "Disable Offloading"}, "modes": {"type": "offloading_modes", "weight": 20, "value": {}, "label": "Offloading Modes"}, "metadata": {"weight": 20, "label": "Offloading"}}, "mtu": {"value": {"weight": 10, "min": 42, "max": 65536, "nullable": true, "value": null, "label": "Use Custom MTU", "type": "number"}, "metadata": {"weight": 30, "label": "MTU"}}, "lacp": {"value": {"type": "select", "weight": 10, "value": "", "label": "Lacp"}, "metadata": {"weight": 50, "label": "Lacp"}}, "mode": {"value": {"type": "select", "weight": 10, "value": "", "label": "Mode"}, "metadata": {"weight": 10, "label": "Mode"}}, "type__": {"type": "hidden", "value": null}, "dpdk": {"enabled": {"restrictions": [{"settings:common.libvirt_type.value != ''kvm''": "Only KVM hypervisor works with DPDK"}], "description": "The Data Plane Development Kit (DPDK) provides high-performance packet processing libraries and user space drivers.", "weight": 10, "value": false, "label": "Enable DPDK", "type": "checkbox"}, "metadata": {"restrictions": [{"action": "hide", "condition": "not (''experimental'' in version:feature_groups)"}], "weight": 40, "label": "DPDK"}}}','{"compute": {"has_primary": false}, "mongo": {"has_primary": true}, "database": {"has_primary": true}, "virt": {"has_primary": false}, "rabbitmq": {"has_primary": true}, "base-os": {"has_primary": false}, "controller": {"has_primary": true}, "keystone": {"has_primary": true}, "ceph-osd": {"has_primary": false}, "ironic": {"has_primary": false}, "cinder-block-device": {"has_primary": false}, "cinder": {"has_primary": false}, "neutron": {"has_primary": true}}','["hypervisor", "network"]')
;
INSERT INTO public.deployment_sequences (release_id,"name",graphs) VALUES
(5,'deploy-changes','[{"type": "provision"}, {"type": "default"}]')
;